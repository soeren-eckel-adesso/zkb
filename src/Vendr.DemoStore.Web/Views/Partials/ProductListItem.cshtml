@using System.Linq;
@using Vendr.DemoStore;
@using Vendr.DemoStore.Models;
@using Vendr.Extensions;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ProductPage>
@{ 
    var multiVariantProductPage = Model as MultiVariantProductPage;
}
<div class="px-3 mt-6 w-1/2 md:w-1/3">
    <a href="@Model.Url()" class="text-center hover:text-teal-400">
        <img src="@(Model.PrimaryImage != null ? Model.PrimaryImage.GetCropUrl(300, 300).ToString() : "https://placehold.it/300x300")" class="border" />
        <span class="block font-bold mt-4">@Model.Parent.Name - @Model.Name</span>
        <span class="block ">
            @if (multiVariantProductPage != null && multiVariantProductPage.Variants.Count > 0)
            {
                // IMPORTANT! Depending on the number of variants you have, this could get very intensive
                // so you might want to find a better approach if this proves to be a problem

                var variantPrices = multiVariantProductPage.Variants.Select(x => ((IProductComp)x.Content).CalculatePrice(Model)).OrderBy(x => x.WithoutTax).ToList();
                var variantPricesAllSame = variantPrices.All(x => x.WithoutTax == variantPrices[0].WithoutTax);

                <text>@(!variantPricesAllSame ? "From " : "") @(variantPrices.First().Formatted())</text>
            }
            else if (Model.ChildVariants.Any())
            {
                var variantPrices = Model.ChildVariants.Select(x => x.CalculatePrice()).OrderBy(x => x.WithoutTax).ToList();
                var variantPricesAllSame = variantPrices.All(x => x.WithoutTax == variantPrices[0].WithoutTax);

                <text>@(!variantPricesAllSame ? "From " : "") @(variantPrices.First().Formatted())</text>
            }
            else
            {
                @(Model.CalculatePrice()?.Formatted())
            }
        </span>
    </a>
</div>